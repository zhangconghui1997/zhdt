<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bf.dt.dao.system.UserMapper">
  <resultMap id="BaseResultMap" type="com.bf.dt.entity.User">
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <insert id="insert" parameterType="com.bf.dt.entity.User">
    insert into dt..user (uuid, login_name, password, 
      age, sex, real_name, 
      email, phone, creat_time, 
      last_ip, status)
    values (#{uuid,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}, 
      #{lastIp,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bf.dt.entity.User">
    insert into dt..user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=VARCHAR},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="findByName" parameterType="string" resultMap="BaseResultMap">
    select u.* from user u where login_name = #{loginName}
  </select>

  <select id="findAll" parameterType="map" resultMap="BaseResultMap">
    select u.uuid, u.real_name, u.email, u.phone from user u limit #{start},#{limit}
  </select>

  <select id="count" resultType="java.lang.Integer">
    select count(*) from user
  </select>


  <delete id="deleteById" parameterType="string">
    delete from user u where u.uuid = #{uuid}
  </delete>
</mapper>